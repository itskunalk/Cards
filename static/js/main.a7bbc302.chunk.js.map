{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","OnSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAACC,GACb,IAAOC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,MAAOC,EAAIH,EAAJG,GACpB,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,YAAYC,IAAG,sCAAiCH,EAAjC,cACxB,gCACC,6BAAKF,IACL,kCAAKC,EAAL,cCYWK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAElB,OACC,8BAEKA,EAAOC,KAAI,SAACC,EAAKC,GACnB,OACC,cAAC,EAAD,CACCR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,cCFTU,EATG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBAAOA,UAAU,oCAAoCW,KAAK,SAASC,YAAY,YAC/EC,SAAUH,OCIEI,EARA,SAAClB,GACf,OACC,qBAAKmB,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAQ,SAAnE,SACCtB,EAAMuB,YC2CMC,G,wDAvCd,aAAc,IAAD,8BACZ,gBAUDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAVxC,EAAKC,MAAQ,CACZtB,OAAO,GACPK,YAAY,IAJD,E,qDAOb,WAAoB,IAAD,OAClBkB,MAAM,+CAA+CC,MAAK,SAAAC,GAAW,OAAOA,EAASC,UAAUF,MAAK,SAAAG,GAAQ,EAAKR,SAAS,CAACnB,OAAO2B,S,oBAQnI,WAAU,IAAD,OACFC,EAAiBC,KAAKP,MAAMtB,OAAO8B,QAAO,SAAA9B,GAC/C,OAAOA,EAAOP,KAAKsC,cAAcC,SAAS,EAAKV,MAAMjB,YAAY0B,kBAGlE,OAA+B,IAA3BF,KAAKP,MAAMtB,OAAOiC,OACd,yCAKP,sBAAKrC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjB,OAAQ4B,a,GAjCLM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACN,cAAC,EAAD,IAEDC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.a7bbc302.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n\tconst {name, email, id}=props;\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='tonyphoto' src={`https://robohash.org/marvel/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p> {email} </p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\t\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n    \t\t\trobots.map((user,i)=>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n    \t\t}\r\n    \t</div>\r\n\t);\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input className='pa3 ba b--green bg-lightest-blue ' type='search' placeholder='type here' \r\n\t\t\tonChange={searchChange}/>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn(\r\n\t\t<div style={{overflowY:'scroll', border:'1px solid black', height: '525px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from './CardList';\r\nimport {robots} from './robots';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component  {\r\n\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = { \t\r\n\t\t\trobots:[],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users/').then(response=>{return response.json();}).then(users=>{this.setState({robots:users})})\r\n\t}\r\n\r\n\tOnSearchChange=(event)=>{\r\n\t\tthis.setState({searchfield:event.target.value}) \r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst filteredRobots = this.state.robots.filter(robots =>{\r\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\tif (this.state.robots.length===0) {\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t}\r\n\t\telse{\r\n\r\n\t\treturn(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'>contact cards</h1>\r\n\t\t\t\t<SearchBox searchChange={this.OnSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} \t\t\t\t\t\t\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  \t<App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}